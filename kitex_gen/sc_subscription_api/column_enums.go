// Code generated by thriftgo (0.3.12). DO NOT EDIT.

package sc_subscription_api

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type ColumnStatus int64

const (
	ColumnStatus_NEW      ColumnStatus = 0
	ColumnStatus_OK       ColumnStatus = 1
	ColumnStatus_DISABLED ColumnStatus = 2
)

func (p ColumnStatus) String() string {
	switch p {
	case ColumnStatus_NEW:
		return "NEW"
	case ColumnStatus_OK:
		return "OK"
	case ColumnStatus_DISABLED:
		return "DISABLED"
	}
	return "<UNSET>"
}

func ColumnStatusFromString(s string) (ColumnStatus, error) {
	switch s {
	case "NEW":
		return ColumnStatus_NEW, nil
	case "OK":
		return ColumnStatus_OK, nil
	case "DISABLED":
		return ColumnStatus_DISABLED, nil
	}
	return ColumnStatus(0), fmt.Errorf("not a valid ColumnStatus string")
}

func ColumnStatusPtr(v ColumnStatus) *ColumnStatus { return &v }
func (p *ColumnStatus) Scan(value interface{}) (err error) {
	var result sql.NullInt64
	err = result.Scan(value)
	*p = ColumnStatus(result.Int64)
	return
}

func (p *ColumnStatus) Value() (driver.Value, error) {
	if p == nil {
		return nil, nil
	}
	return int64(*p), nil
}
