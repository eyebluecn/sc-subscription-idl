// Code generated by thriftgo (0.3.12). DO NOT EDIT.

package sc_subscription_idl

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type SubscriptionStatus int64

const (
	SubscriptionStatus_CREATED  SubscriptionStatus = 0
	SubscriptionStatus_OK       SubscriptionStatus = 1
	SubscriptionStatus_DISABLED SubscriptionStatus = 2
)

func (p SubscriptionStatus) String() string {
	switch p {
	case SubscriptionStatus_CREATED:
		return "CREATED"
	case SubscriptionStatus_OK:
		return "OK"
	case SubscriptionStatus_DISABLED:
		return "DISABLED"
	}
	return "<UNSET>"
}

func SubscriptionStatusFromString(s string) (SubscriptionStatus, error) {
	switch s {
	case "CREATED":
		return SubscriptionStatus_CREATED, nil
	case "OK":
		return SubscriptionStatus_OK, nil
	case "DISABLED":
		return SubscriptionStatus_DISABLED, nil
	}
	return SubscriptionStatus(0), fmt.Errorf("not a valid SubscriptionStatus string")
}

func SubscriptionStatusPtr(v SubscriptionStatus) *SubscriptionStatus { return &v }
func (p *SubscriptionStatus) Scan(value interface{}) (err error) {
	var result sql.NullInt64
	err = result.Scan(value)
	*p = SubscriptionStatus(result.Int64)
	return
}

func (p *SubscriptionStatus) Value() (driver.Value, error) {
	if p == nil {
		return nil, nil
	}
	return int64(*p), nil
}
